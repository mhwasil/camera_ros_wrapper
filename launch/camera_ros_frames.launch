<?xml version="1.0" ?>
<launch>
    <arg name="camera" default="realsense2" />
    <arg name="tf_prefix" default="" />

    <arg name="pi/2" value="1.5707963267948966" />
    <arg name="optical_rotate" value="0 0 0 -$(arg pi/2) 0 -$(arg pi/2)" />
    
    <arg name="M_PI" value="3.1415926535897931" />

    <!-- The following values are approximate, and the camera node
     publishing TF values with actual calibrated camera extrinsic values -->
    <arg name="d435_cam_depth_to_left_ir_offset" value="0.0"/>
    <arg name="d435_cam_depth_to_right_ir_offset" value="-0.050"/>
    <arg name="d435_cam_depth_to_color_offset" value="0.015"/>
  
    <!-- The following values model the aluminum peripherial case for the
  	D435 camera, with the camera joint represented by the actual 
  	peripherial camera tripod mount -->
    <arg name="d435_cam_width" value="0.090"/>
    <arg name="d435_cam_height" value="0.025"/>
    <arg name="d435_cam_depth" value="0.02505"/>
    <arg name="d435_cam_mount_from_center_offset" value="0.0149"/>
  
    <!-- The following offset is relative the the physical D435 camera peripherial
  	camera tripod mount -->
    <arg name="d435_cam_depth_px" value="${d435_cam_mount_from_center_offset}"/>
    <arg name="d435_cam_depth_py" value="0.0175"/>
		<arg name="d435_cam_depth_pz" value="${d435_cam_height/2}"/>


    <node pkg="tf" type="static_transform_publisher" name="$(arg camera)_base_link"
        args="$(arg d435_cam_depth_px) $(arg d435_cam_depth_py) $(arg d435_cam_depth_pz) 0 0 0 $(arg tf_prefix)/$(arg camera)_link $(arg tf_prefix)/$(arg camera)_depth_frame 100" />
	 
		<node pkg="tf" type="static_transform_publisher" name="$(arg camera)_base_link2"
        args="0 $(arg d435_cam_depth_to_color_offset) 0 0 0 0 $(arg tf_prefix)/$(arg camera)_link $(arg tf_prefix)/$(arg camera)_rgb_frame 100" />
        
    <node pkg="tf" type="static_transform_publisher" name="$(arg camera)_base_link3"
        args="$(arg optical_rotate) $(arg tf_prefix)/$(arg camera)_rgb_frame $(arg tf_prefix)/$(arg camera)_rgb_optical_frame 100" />
    
    <node pkg="tf" type="static_transform_publisher" name="$(arg camera)_base_link4"
        args="$(arg optical_rotate) $(arg tf_prefix)/$(arg camera)_depth_frame $(arg tf_prefix)/$(arg camera)_depth_optical_frame  100" />
    
</launch>
